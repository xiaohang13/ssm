<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用spring容器管理 -->
    <context:component-scan base-package="com.nfmedia.carshop">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 加载classpath下的db.properties文件 -->
    <context:property-placeholder location="classpath:config/db.properties"/>

    <!-- 配置数据源，使用DHCP连接池 -->
    <bean id="dataSource" class="${carshop.dataSource}" destroy-method="close">
        <property name="driverClassName" value="${carshop.driver}"/>
        <property name="url" value="${carshop.url}"/>
        <property name="username" value="${carshop.username}"/>
        <property name="password" value="${carshop.password}"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <!-- sqlsessionfactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载数据源，使用上面配置好的数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation" value="classpath:config/mybatis/mybatis.xml"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/nfmedia/carshop/mapping/*.xml"/>
        </bean>

    <!-- 配置mybatis自动扫描SQL映射文件 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.nfmedia.carshop.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 使用声明式XML配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 对哪个方法进行事务增强 -->
            <tx:method name="accountTransfer"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置aop切面及切入点 -->
    <aop:config>
        <!-- 配置切入点 -->
        <!--
            * com.nfmedia.carshop.services.*.*(..)
            第一个*表示方法的返回类型
            第二个*表示services下的子包
            第三个*表示任意方法
            (..)表示任意参数
        -->
        <aop:pointcut id="accountPoint" expression="execution(* com.nfmedia.carshop.services.*.*(..))"/>
        <!-- 配置切面 -->
        <!-- aop:advisor作用：相当于使用在accountPoint切入点中应用txAdvice对应的事务增强 -->
        <aop:advisor pointcut-ref="accountPoint" advice-ref="txAdvice"/>
    </aop:config>
</beans>